--In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data.

-- How many orders were placed in January? 9,723 orders placed in January
SELECT COUNT(orderID) num_orders_Jan 
FROM JanSales;

SELECT COUNT(orderid)
FROM BIT_DB.JanSales;

-- How many of those orders were for an iPhone? 379 iPhones were bought in January.
SELECT COUNT(orderID) iphone_orders
FROM JanSales
WHERE Product = 'iPhone';

SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product='iPhone';

-- Select the customer account numbers for all the orders that were placed in February?
SELECT c.acctnum
FROM customers c
JOIN FebSales f
ON c.order_id = f.orderID;

SELECT acctnum
FROM BIT_DB.customers cust

INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=FEB.orderid;

-- Which product was the cheapest one sold in January, and what was the price? Triple AAA Batteries (4-pack)
SELECT * 
FROM JanSales
ORDER BY price
LIMIT 10;

SELECT distinct product, price 
FROM BIT_DB.JanSales 
ORDER BY price ASC LIMIT 1;

-- What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).
SELECT orderID, Quantity, Product, price
FROM JanSales;

-- How would we calculate how many of each product were sold? We'd use SUM(quantity).
SELECT SUM(Quantity), price, Product
FROM JanSales
GROUP BY 2,3;

SELECT SUM(Quantity) * price Revenue, Product
FROM JanSales
GROUP BY 2;

-- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, SUM(Quantity), SUM(Quantity) * price Revenue
FROM FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY 1;

select 
sum(Quantity), 
product, 
sum(quantity)*price as revenue
FROM BIT_DB.FebSales 
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

-- How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers? 890, $4.16
SELECT COUNT(c.acctnum), AVG(f.Quantity * f.price) avg_price
FROM FebSales f
LEFT JOIN customers c
ON c.order_id = f.orderID
WHERE f.Quantity > 2;

-- Date Filtering
SELECT *
FROM FebSales
WHERE orderdate BETWEEN '02/13/19 00:00' AND '02/18/19 00:00';

SELECT location
FROM FebSales
WHERE orderdate = '02/18/19 01:35';

SELECT SUM(Quantity)
FROM Febsales
WHERE orderdate like '02/18/19%';

SELECT distinct Product
FROM FebSales
WHERE Product like '%Batteries%';


SELECT distinct Product
FROM FebSales
WHERE Product like '%Batteries%';


SELECT distinct Product, Price
FROM FebSales 
WHERE Price like '%.99';

-- List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT SUM(Quantity) quantity_sold, Product
FROM Febsales
WHERE location LIKE '%Los Angeles%'
GROUP BY 2;

-- Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT distinct location, COUNT(orderID) orders
FROM JanSales
WHERE location LIKE '%New York%'
GROUP BY 1
HAVING orders >= 3;

SELECT distinct location, count(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
GROUP BY location
HAVING count(orderID)>2;

-- How many of each type of headphone were sold in February?
SELECT SUM(Quantity) orders, Product
FROM FebSales
WHERE Product LIKE '%Headphones%'
GROUP BY 2;

SELECT sum(Quantity) as quantity,
Product
FROM BIT_DB.FebSales 
WHERE Product like '%Headphones%'
GROUP BY Product;

/*
What was the average amount spent per account in February? 
*/
SELECT sum(quantity*price)/count(cust.acctnum)
FROM FebSales Feb
LEFT JOIN customers cust
ON FEB.orderid=cust.order_id;

-- or

SELECT avg(quantity*price)
FROM FebSales Feb
LEFT JOIN customers cust
ON FEB.orderid=cust.order_id;

/*
What was the average quantity of products purchased per account in February? 
*/
SELECT AVG(Quantity) avg_quantity
FROM FebSales f
LEFT JOIN customers c
ON f.orderID = c.order_id;

select sum(quantity)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id;

-- Which product brought in the most revenue in January and how much revenue did it bring in total? Macbook Pro Laptop brought in $399,500 in revenue in Jan.
SELECT ROUND(SUM(Quantity) * price) total_revenue, Product
FROM JanSales
GROUP BY 2
ORDER BY 1 DESC
LIMIT 3;

SELECT product, 
sum(quantity*price)
FROM BIT_DB.JanSales 
GROUP BY product
ORDER BY sum(quantity*price) desc 
LIMIT 3;
